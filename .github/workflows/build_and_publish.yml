name: Build and Publish
on:
  push:
    tags:
      - "*"
defaults:
  run:
    shell: bash

jobs:
  build_and_publish:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Build packages
        run: |
          docker build -t fireguard:latest -f pkg/Dockerfile .
      - name: Extract the Tag Name
        id: tag_name
        run: |
          ref=${{ github.ref }}
          tag_name=${ref#"refs/tags/"}
          echo "::set-output name=tag_name::${tag_name}"
      - name: Rename Built Artifacts
        run: |
          # This won't always be the case, but for now it is
          version="${{ steps.tag_name.outputs.tag_name }}"

          cid=$(docker create fireguard:latest)
          filename="fireguard_${version}-1_amd64.deb"
          echo "Extracting built debian package from container ${cid} to filename ${filename}"

          docker cp ${cid}:/build/pkg/debian.deb ./${filename}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./fireguard_${{ steps.tag_name.outputs.tag_name }}-1_amd64.deb
          asset_name: fireguard_${{ steps.tag_name.outputs.tag_name }}-1_amd64.deb
          asset_content_type: application/vnd.debian.binary-package
