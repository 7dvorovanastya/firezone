name: CI
on:
  - push
defaults:
  run:
    shell: bash

jobs:
  unit-test:
    runs-on: ubuntu-18.04
    env:
      MIX_ENV: test
      POSTGRES_HOST: localhost
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      matrix:
        postgres:
          - postgres:9.6
          - postgres:10
          - postgres:11
          - postgres:12
          - postgres:13
    services:
      postgres:
        image: ${{ matrix.postgres }}
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Install package dependencies
        run: |
          sudo apt-get install -q -y \
            net-tools \
            wireguard
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: erlef/setup-beam@v1
        with:
          otp-version: '24'
          elixir-version: '1.12'
      - uses: actions/cache@v2
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-
      - name: Install Dependencies
        run: mix deps.get --only test
      - name: Setup Database
        run: |
          mix ecto.create
          mix ecto.migrate
      - name: Run Tests and Upload Coverage Report
        run: mix coveralls.github --umbrella


  build-package-test:
    needs: unit-test
    runs-on: macos-latest # macos supports Virtualbox / Vagrant
    strategy:
      matrix:
        include:
          - port: 8800
            os: centos_7
          - port: 8801
            os: centos_8
          - port: 8802
            os: debian_10
          - port: 8803
            os: fedora_33
          - port: 8804
            os: fedora_34
          - port: 8805
            os: ubuntu_18.04
          - port: 8806
            os: ubuntu_20.04
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - run: vagrant up ${{ matrix.os }}
      - run: .ci/functional_test.sh

  publish:
    needs: build-package-test
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        os:
          - debian_10
          - ubuntu_18.04
          - ubuntu_20.04
          - centos_7
          - centos_8
          - fedora_33
          - fedora_34
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - uses: actions/download-artifact@v2
        with:
          name: firezone
          path: ./_build/
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            _build/firezone*.tar.gz
      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./firezone*
      #     asset_name: ${{ matrix.os }}_amd64
      #     asset_content_type: application/vnd.debian.binary-package
