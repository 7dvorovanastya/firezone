#!/usr/bin/env bash
set -e

# FireGuard package post-install script

# 1. Generate secrets
# 2. Bootstrap DB
# 3. Generate WireGuard interface and config

# Add fireguard user if not exists
if id fireguard &>/dev/null; then
  echo "fireguard user exists... not creating."
else
  echo "creating system user fireguard"
  useradd --system fireguard
fi

# Generate app secrets
live_view_signing_salt="$(openssl rand -base64 24)"
secret_key_base="$(openssl rand -base64 48)"
db_user=fireguard

# Base64 includes forward slashes which are problematic in the
# DB_URL connect string, so use hex.
db_password="$(openssl rand -hex 16)"

# Setup DB
sudo -i -u postgres psql -c "CREATE ROLE ${db_user} WITH LOGIN PASSWORD '${db_password}';" || true
sudo -i -u postgres psql -c "CREATE DATABASE fireguard;" || true
sudo -i -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE fireguard to ${db_user};" || true

# Generate WireGuard privkey
privkey=$(wg genkey)

# Write FireGuard SSL files
mkdir -p /opt/fireguard/ssl
chown -R fireguard:root /opt/fireguard/ssl
hostname=$(hostname)
openssl req -new -x509 -sha256 -newkey rsa:2048 -nodes \
    -keyout /opt/fireguard/ssl/key.pem \
    -out /opt/fireguard/ssl/cert.pem \
    -days 365 -subj "/CN=${hostname}"
chmod 0600 /opt/fireguard/ssl/key.pem
chmod 0644 /opt/fireguard/ssl/cert.pem

# Write FireGuard config files
touch /opt/fireguard/config.env
touch /opt/fireguard/wg-fireguard.conf
chmod 0600 /opt/fireguard/config.env
chmod 0660 /opt/fireguard/wg-fireguard.conf
chown -R fireguard:root /opt/fireguard
cat <<EOT >> /opt/fireguard/config.env
# This file is loaded into FireGuard's Environment upon launch to configure it.

# This is used to ensure secure communication with the live web views.
# Re-generate this with "openssl rand -base64 24". All existing web views will
# need to be refreshed.
LIVE_VIEW_SIGNING_SALT="${live_view_signing_salt}"

# This is used to secure cookies among other things.
# You can regenerate this with "openssl rand -base64 48". All existing clients
# will be signed out.
SECRET_KEY_BASE="${secret_key_base}"

# The URL to connect to your DB. Assumes the database has been created and this
# user has privileges to create and modify tables.
DATABASE_URL="ecto://${db_user}:${db_password}@127.0.0.1/fireguard"

# The HTTPS port to listen on. Defaults to 8800.
HTTPS_LISTEN_PORT=8800

# The address to bind the HTTPS server to. Defaults to "0.0.0.0"
HTTPS_LISTEN_ADDRESS=0.0.0.0

# The WireGuard port to listen on. Defaults to 51820.
WG_LISTEN_PORT=51820

# The address to bind the WireGuard service to. Defaults to "0.0.0.0"
WG_LISTEN_ADDRESS=0.0.0.0

# SSL certificate file and key path. Self-signed certs are generated for you on
# install, but it's highly recommended to replace these with valid certs.
# Free certs can be obtained at https://letsencrypt.org.
SSL_CERT_FILE=/opt/fireguard/ssl/cert.pem
SSL_KEY_FILE=/opt/fireguard/ssl/key.pem

# Path to the intermediate certificates file. (usually not required)
# SSL_CA_CERT_FILE=

# Host to use for generating links back to the application, such as in
# outbound emails. Defaults to "localhost".
URL_HOST=${hostname}

# For public-facing sites, it's recommended to leave signups disabled.
DISABLE_SIGNUP=yes
EOT
