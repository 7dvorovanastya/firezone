#!/usr/bin/env bash
set -e

# FireGuard package post-install script

# 1. Generate secrets
# 2. Bootstrap DB
# 3. Generate WireGuard interface and config

# Add fireguard user if not exists
if id fireguard &>/dev/null; then
  echo "fireguard user exists... not creating."
else
  echo "creating system user fireguard"
  useradd --system fireguard
fi

# Generate app secrets
live_view_signing_salt="$(openssl rand -base64 24)"
secret_key_base="$(openssl rand -base64 48)"
db_user=fireguard
db_password="$(openssl rand -base64 8)"

# Setup DB
sudo -i -u postgres psql -c "CREATE ROLE ${db_user} WITH LOGIN PASSWORD '${db_password}';" || true
sudo -i -u postgres psql -c "CREATE DATABASE fireguard;" || true
sudo -i -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE fireguard to ${db_user};" || true

# Generate WireGuard priv/pubkeys
privkey=$(wg genkey)
pubkey=$(echo ${privkey} | wg pubkey)

# Write FireGuard config file
touch /opt/fireguard/config.env
chown -R fireguard:root /opt/fireguard
chmod 0600 /opt/fireguard/config.env
cat <<EOT >> /opt/fireguard/config.env
LIVE_VIEW_SIGNING_SALT="${live_view_signing_salt}"
SECRET_KEY_BASE="${secret_key_base}"
DATABASE_URL="ecto://${db_user}:${db_password}@localhost/fireguard"
PUBKEY="${pubkey}"
LISTEN_PORT=4000
LISTEN_HOST=localhost
EOT

# Grab default route interface
default_int=$(route | grep '^default' | grep -o '[^ ]*$')

# Write WireGuard config file
cat <<EOT >> /etc/wireguard/wg-fireguard.conf
[Interface]
ListenPort = 51820
PrivateKey = ${privkey}
PostUp = iptables -A FORWARD -i %i -j ACCEPT; iptables -A FORWARD -o %i -j ACCEPT; iptables -t nat -A POSTROUTING -o ${default_int} -j MASQUERADE
PostDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -D FORWARD -o %i -j ACCEPT; iptables -t nat -D POSTROUTING -o ${default_int} -j MASQUERADE

EOT

systemctl enable fireguard
systemctl start fireguard
