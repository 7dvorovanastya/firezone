#!/usr/bin/env bash
set -xe

ls -la /opt/cloudfire/bin

# CloudFire package post-install script

# 1. Generate secrets
# 2. Bootstrap DB
# 3. Generate WireGuard interface and config

# All created files are 0600 by default
umask 077

# Add cloudfire user if not exists
if id cloudfire &>/dev/null; then
  echo "cloudfire user exists... not creating."
else
  echo "creating system user cloudfire"
  useradd --system cloudfire
fi

# Generate app secrets
live_view_signing_salt="$(openssl rand -base64 24)"
secret_key_base="$(openssl rand -base64 48)"
db_user=cloudfire

# base64 includes forward slashes which are problematic in the
# db_url connect string, so use hex.
db_password="$(openssl rand -hex 16)"

db_key="$(openssl rand -base64 32)"

# Setup DB
# XXX: Remove || true and detect actual failures
su postgres -c "psql -c \"CREATE ROLE ${db_user} WITH LOGIN PASSWORD '${db_password}';\" || true"
su postgres -c "psql -c \"CREATE DATABASE cloudfire;\" || true"
su postgres -c "psql -c \"GRANT ALL PRIVILEGES ON DATABASE cloudfire to ${db_user};\" || true"

# Write CloudFire SSL files
mkdir -p /opt/cloudfire/ssl
hostname=$(hostname)
openssl req -new -x509 -sha256 -newkey rsa:2048 -nodes \
    -keyout /opt/cloudfire/ssl/key.pem \
    -out /opt/cloudfire/ssl/cert.pem \
    -days 365 -subj "/CN=${hostname}"

wg genkey > /opt/cloudfire/server.key

# Write CloudFire config files
cat <<EOT >> /opt/cloudfire/config.env
# This file is loaded into CloudFire's Environment upon launch to configure it.

# This is used to ensure secure communication with the live web views.
# Re-generate this with "openssl rand -base64 24". All existing web views will
# need to be refreshed.
LIVE_VIEW_SIGNING_SALT="${live_view_signing_salt}"

# This is used to secure cookies among other things.
# You can regenerate this with "openssl rand -base64 48". All existing clients
# will be signed out.
SECRET_KEY_BASE="${secret_key_base}"

# The URL to connect to your DB. Assumes the database has been created and this
# user has privileges to create and modify tables.
DATABASE_URL="ecto://${db_user}:${db_password}@127.0.0.1/cloudfire"

# The HTTPS port to listen on. Defaults to 8800.
HTTPS_LISTEN_PORT=8800

# The address to bind the HTTPS server to. Defaults to "127.0.0.1"
HTTPS_LISTEN_ADDRESS=127.0.0.1

# The WireGuard port to listen on. Defaults to 51820.
WG_LISTEN_PORT=51820

# The address for the WireGuard endpoint. Defaults to the address of the
# default egress interface if not set.
WG_ENDPOINT_ADDRESS=

# The Base64-encoded key for encrypted database fields.
DB_ENCRYPTION_KEY=${db_key}

# SSL certificate file and key path. Self-signed certs are generated for you on
# install, but it's highly recommended to replace these with valid certs.
# Free certs can be obtained at https://letsencrypt.org.
SSL_CERT_FILE=/opt/cloudfire/ssl/cert.pem
SSL_KEY_FILE=/opt/cloudfire/ssl/key.pem

# Path to the intermediate certificates file. (usually not required)
# SSL_CA_CERT_FILE=

# Host to use for generating links back to the application, such as in
# outbound emails. Defaults to "localhost".
# URL_HOST=${hostname}

# For security, it's recommended to leave signups disabled and instead create
# users via the CLI.
DISABLE_SIGNUP=yes
EOT

# Set perms
chown -R cloudfire:root /opt/cloudfire
chmod 0644 /opt/cloudfire/ssl/cert.pem
