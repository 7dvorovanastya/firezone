FROM fireguard-base:latest

RUN asdf plugin-add erlang && \
    asdf plugin-update erlang && \
    asdf plugin-add elixir && \
    asdf plugin-update elixir && \
    asdf plugin-add nodejs && \
    asdf plugin-update nodejs && \
    asdf plugin-add python && \
    asdf plugin-update python

# asdf-nodejs requires this
RUN bash -c '${ASDF_DATA_DIR:=$HOME/.asdf}/plugins/nodejs/bin/import-release-team-keyring'

COPY .tool-versions ./

RUN asdf install


ENV MIX_ENV=prod


RUN mix local.hex --force && \
    mix local.rebar --force
COPY mix.exs mix.lock ./
COPY config config
COPY apps/fg_http/mix.exs ./apps/fg_http/
COPY apps/fg_wall/mix.exs ./apps/fg_wall/
COPY apps/fg_vpn/mix.exs ./apps/fg_vpn/

RUN mix do deps.get, deps.compile

COPY apps/fg_http/assets/package.json apps/fg_http/assets/package-lock.json ./apps/fg_http/assets/

RUN cd apps/fg_http/assets && ls ../../../../ && npm ci --progress=false --no-audit --loglevel=error

COPY apps/fg_http/priv apps/fg_http/priv
COPY apps/fg_http/assets apps/fg_http/assets

RUN npm run --prefix ./apps/fg_http/assets deploy && \
    cd apps/fg_http && mix phx.digest

COPY . .

RUN mix release




FROM ubuntu:20.04

RUN mkdir /release

WORKDIR /release

COPY --from=build /build/_build/prod/rel/fireguard .

# build deb
